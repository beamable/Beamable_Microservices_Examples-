//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beamable.Server.Clients
{
    using System;
    using Beamable.Platform.SDK;
    using Beamable.Server;
    
    
    /// <summary> A generated client for <see cref="Beamable.Server.MyCurrencyMicroservice"/> </summary
    public sealed class MyCurrencyMicroserviceClient : Beamable.Server.MicroserviceClient
    {
        
        /// <summary>
        /// Call the GetActiveCurrencyId method on the MyCurrencyMicroservice microservice
        /// <see cref="Beamable.Server.MyCurrencyMicroservice.GetActiveCurrencyId"/>
        /// </summary>
        public Beamable.Common.Promise<string> GetActiveCurrencyId()
        {
            string[] serializedFields = new string[0];
            return this.Request<string>("MyCurrencyMicroservice", "GetActiveCurrencyId", serializedFields);
        }
        
        /// <summary>
        /// Call the GetActiveCurrencyValue method on the MyCurrencyMicroservice microservice
        /// <see cref="Beamable.Server.MyCurrencyMicroservice.GetActiveCurrencyValue"/>
        /// </summary>
        public Beamable.Common.Promise<long> GetActiveCurrencyValue()
        {
            string[] serializedFields = new string[0];
            return this.Request<long>("MyCurrencyMicroservice", "GetActiveCurrencyValue", serializedFields);
        }
        
        /// <summary>
        /// Call the AddToActiveCurrency method on the MyCurrencyMicroservice microservice
        /// <see cref="Beamable.Server.MyCurrencyMicroservice.AddToActiveCurrency"/>
        /// </summary>
        public Beamable.Common.Promise<bool> AddToActiveCurrency()
        {
            string[] serializedFields = new string[0];
            return this.Request<bool>("MyCurrencyMicroservice", "AddToActiveCurrency", serializedFields);
        }
        
        /// <summary>
        /// Call the RemoveFromActiveCurrency method on the MyCurrencyMicroservice microservice
        /// <see cref="Beamable.Server.MyCurrencyMicroservice.RemoveFromActiveCurrency"/>
        /// </summary>
        public Beamable.Common.Promise<bool> RemoveFromActiveCurrency()
        {
            string[] serializedFields = new string[0];
            return this.Request<bool>("MyCurrencyMicroservice", "RemoveFromActiveCurrency", serializedFields);
        }
    }
}
